#include <Stepper.h>

// Stepper motor
const int stepsPerRevolution = 2048;
Stepper myStepper(stepsPerRevolution, 13, 11, 12, 10); // IN1-IN4 correct order

// Buttons
const int btnForward = 2;
const int btnBackward = 3;
bool lastBtnFwd = HIGH;
bool lastBtnBwd = HIGH;

// TCRT5000 sensor
const int sensorA0 = A0;
const int ledIR = 5;
const int closethreshold = 500;

// Beam sensor and LED indicator
const int beamPin = 4;
const int ledBeam = 6;

void setup() { 
// Engine 
myStepper.setSpeed(10); 

// Buttons 
pinMode(btnForward, INPUT_PULLUP); 
pinMode(btnBackward, INPUT_PULLUP); 

// IR sensor 
pinMode(ledIR, OUTPUT); 

//Beam sensor 
pinMode(beamPin, INPUT); // Try INPUT_PULLUP if it doesn't detect 
pinMode(ledBeam, OUTPUT); 

// Serial communication 
Serial.begin(9600); 
Serial.println("‚úÖ System ready with updated pins.");
}

void loop() { 
// --- TCRT5000 SENSOR --- 
int read = analogRead(sensorA0); 
Serial.print("Sensor A0: "); 
Serial.print(read); 

if (reading > nearthreshold) { 
Serial.print(" --> üü¢ FREE "); 
digitalWrite(ledIR, LOW); 
} else { 
Serial.print(" --> üî¥ NEAR "); 
digitalWrite(ledIR, HIGH); 
} 

// --- BEAM SENSOR --- 
int beamState = digitalRead(beamPin); 
if (beamState == LOW) { 
digitalWrite(ledBeam, HIGH); 
Serial.println("üåë BEAM INTERRUPTED -> LED ON"); 
} else { 
digitalWrite(ledBeam, LOW); 
Serial.println("‚òÄÔ∏è BEAM CLEAR -> LED OFF"); 
} 

// --- BUTTONS (Falling edge) --- 
bool currentBtnFwd = digitalRead(btnForward); 
bool currentBtnBwd = digitalRead(btnBackward); 

if (lastBtnFwd == HIGH && currentBtnFwd == LOW) { 
Serial.println("‚û°Ô∏è Moving forward 1/16 of a turn"); 
myStepper.step(stepsPerRevolution / 16); 
} 

if (lastBtnBwd == HIGH && currentBtnBwd == LOW) { 
Serial.println("‚¨ÖÔ∏è Going back 1/16 of a turn"); 
myStepper.step(-stepsPerRevolution / 16); 
} 

lastBtnFwd = currentBtnFwd; 
lastBtnBwd = currentBtnBwd; 

delay(500);
}
